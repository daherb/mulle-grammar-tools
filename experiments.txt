OBS: the objective function has to be changed in the source code by commenting out the unused ones, in file Tool/Tree.hs
- Rebuild grammars:
 - monolingual
 simulate "path/to/csv" "nameOfObjectiveFunctionForCSV" maxDepth numberOfSamples largerGrammarPgf grammarToBeRebuildPgf
 e.g.
 ofs = ["numrules","numtrees","numtreesnumrules","numtreesweightednumrules"]
 langs = ["Eng","Fin","Ger","Spa","Swe"]
 [simluate "csv/" of d =<< (readPGF $ "pgfs/Lang" ++ l ++ ".pgf") =<< (readPGF $ "pgfs/Exemplum" ++ l ++ ".pgf") | l <- langs, d <- [5..10] , of <- ofs]
 - multilingual
   Todo: make a verions simulateMulti that calls restrictMultilingualGrammar instead of restrictGrammar
- Compare treebank
 Create grammar
 - monolinual
   compareTreebank1 "data/mini-corpus/sv/sv.txt" "data/mini-corpus/fi/MiniFinFin.pgf"
 - multilingual
   compareTreebankMulti1 "data/mini-corpus/sv/sv.txt" ("data/mini-corpus/fi/MiniFinFin.pgf" ,"MiniFin") ("data/mini-corpus/fi/MiniFinEng.pgf","MiniEng")
 the result will be written to MiniCutXMiniLANG.gf in /tmp (where X is the number of the solution and LANG is the language code) which has to be fixed manually:
 - rename to MiniCutXMiniLang.gf to MiniCutXLang.gf and change name in file as well
 - change MiniMiniLANG to MiniLANG
 Compare result
 r <- compareTreebank2 "data/mini-corpus/de/de.txt" "data/mini-corpus/de/MiniCut1.pgf" "MiniCut1Ger
 -- show if the tree was included
 map (\(a,_,_) -> a) r
 ff <- readFile "data/mini-corpus/de/de.txt"
 let rr = read ff :: [(String,String,String)]
 let ss = [(s1,s2) | (s1,s2,_) <- rr]
 let ls = map (\(_,_,ts) -> length ts) r in (sum ls)
 let ts = [sentenceTrees pgf1 (fromJust $ readLanguage "MiniSwe") s1 |(s1,_) <- ss]
 let ts = [(sentenceTrees pgf1 l1 s1,sentenceTrees pgf2 l2 s2) |(s1,s2) <- ss]
 -- check if some parse failed
 filter (\(_,_,c) -> null c) r
